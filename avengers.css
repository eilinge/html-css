body {
    font-family: tahoma;
    font-size: 15px;
    line-height: 1.75;
    margin: 0px;
    padding: 0px;
}

#timeline {
    display: flex;
    background-color: #0984e3;
}

#timeline:hover .item {
    width: 23.3333%;
}

.year:hover {
    cursor: pointer;
}

.item {
    /* transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。 
    translate(x, y) 定义 2D 转换。 
    translate3d(x, y, z) 定义 3D 转换。 
    translateX(x) 定义转换，只是用 X 轴的值。 
    translateY(y) 定义转换，只是用 Y 轴的值。 
    translateZ(z) 定义 3D 转换，只是用 Z 轴的值。 
    scale(x, y) 定义 2D 缩放转换。 
    scale3d(x, y, z) 定义 3D 缩放转换。 
    scaleX(x) 通过设置 X 轴的值来定义缩放转换。 
    scaleY(y) 通过设置 Y 轴的值来定义缩放转换。 
    scaleZ(z) 通过设置 Z 轴的值来定义 3D 缩放转换。 
    rotate(angle) 定义 2D 旋转，在参数中规定角度。 
    rotate3d(x, y, z, angle) 定义 3D 旋转。 
    rotateX(angle) 定义沿着 X 轴的 3D 旋转。 
    rotateY(angle) 定义沿着 Y 轴的 3D 旋转。 
    rotateZ(angle) 定义沿着 Z 轴的 3D 旋转。 
    skew(x-angle, y-angle) 定义沿着 X 和 Y 轴的 2D 倾斜转换。 
    skewX(angle) 定义沿着 X 轴的 2D 倾斜转换。 
    skewY(angle) 定义沿着 Y 轴的 2D 倾斜转换。 
    perspective(n)
    */
    transform: translate3d(0,0,0);
    position: relative;
    width: 25%;
    height: 100vh;
    min-height: 600px;
    color: white;
    /* overflow: 定义溢出元素内容区的内容会如何处理
    visible 默认值。内容不会被修剪，会呈现在元素框之外。 
    hidden 内容会被修剪，并且其余内容是不可见的。 
    scroll 内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。 
    auto 如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。 
    */
    overflow: hidden;
    transition: width 0.5s ease;
}

/* 设置在HTML元素对象前和后（依据对象树的逻辑结构）发生的内容
CSS中有一个特性允许我们添加额外元素而不扰乱文档本身，这就是“伪元素”。 */
.item:before, .item:after {
    transform: translate3d(0,0,0);
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

.item:after {
    /* red, green, blue, alpha(不透明度)*/
    background: rgba(21, 126, 209, 0.85);
    /* opacity 属性设置元素的不透明级别。从 0.0 （完全透明）到 1.0（完全不透明）。 */
    opacity: 1;
    /* transition: property duration timing-function delay;
    transition-property 规定设置过渡效果的 CSS 属性的名称。 
        none 没有属性会获得过渡效果。 
        all 所有属性都将获得过渡效果。 
        property 定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔。
    transition-duration 规定完成过渡效果需要多少秒或毫秒。 
        默认值是 0，意味着不会有效果。
    transition-timing-function 规定速度效果的速度曲线。  
        linear 规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0, 0, 1, 1)）。 
        ease 规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25, 0.1, 0.25, 1)）。 
        ease-in 规定以慢速开始的过渡效果（等于 cubic-bezier(0.42, 0, 1, 1)）。 
        ease-out 规定以慢速结束的过渡效果（等于 cubic-bezier(0, 0, 0.58, 1)）。 
        ease-in-out 规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42, 0, 0.58, 1)）。
    transition-delay 定义过渡效果何时开始。*/
    transition: opacity 0.5s ease;
}

.item:before {
    /* linear-gradient（线性渐变）和 radial-gradient（径向渐变）
    其共有三个参数，
    第一个参数表示线性渐变的方向，top 是从上到下、left 是从左到右，如果定义成 left top，那就是从左上角到右下角。
    第二个和第三个参数分别是起点颜色和终点颜色。 */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%,
    rgba(0,0,0,1) 75%);
    z-index: 1;
    opacity: 0;
    transform: translate3d(0,0,0) translateY(50%);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.item:hover {
    /* !important 表示高优先级。 */
    width: 30% !important;
}
.item:hover .content {
    opacity: 1;
    transform: translateY(0);
    transition: all 0.75s ease 0.5s;
}
.item:hover .bg {
    /* filter: 改变模糊度 亮度 透明度等方法
    grayscale 灰度 值为0-1之间的小数 
    sepia 褐色 值为0-1之间的小数 
    saturate 饱和度 值为num 
    hue-rotate 色相旋转 值为angle 
    invert 反色 值为0-1之间的小数 
    opacity 透明度 值为0-1之间的小数 
    brightness 亮度 值为0-1之间的小数 
    contrast 对比度 值为num 
    blur 模糊 值为length 
    drop-shadow 阴影 */
    filter: grayscale(0);
}
.content {
    transform: translate3d(0,0,0) translateY(25px);
    position: relative;
    z-index: 1;
    text-align: center;
    /* rem综合评价是用来做web app它绝对是最合适的人选之一
    rem（font size of the root element）是指相对于根元素的字体大小的单位。简单的说它就是一个相对单位。
    em（font size of the element）是指相对于父元素的字体大小的单位。 */
    margin: 0 1.618em;
    top: 55%;
    opacity: 0;
}
.content h1 {
    font-family: tahoma;
    text-transform: uppercase;
    color: deepskyblue;
    font-size: 1.44rem;
    font-weight: normal;
}
.year {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    z-index: 1;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
}

.year p {
    font-family: tahoma;
    font-size: 1.728rem;
    line-height: 0;
}
.bg {
    transform: translate3d(0,0,0);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-size: cover;
    background-position: center center;
    transition: filter 0.5s ease;
    filter: grayscale(100%);
}

.content p {
    font-family: tahoma;
    font-size: normal;
}